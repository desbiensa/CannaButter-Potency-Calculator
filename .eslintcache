[{"C:\\Users\\andre\\OneDrive\\Documents\\_____TheCannabisCook\\projects\\potency-calculator\\src\\App.js":"1","C:\\Users\\andre\\OneDrive\\Documents\\_____TheCannabisCook\\projects\\potency-calculator\\src\\Components\\Calculator.js":"2","C:\\Users\\andre\\OneDrive\\Documents\\_____TheCannabisCook\\projects\\potency-calculator\\src\\index.js":"3"},{"size":186,"mtime":1610165014021,"results":"4","hashOfConfig":"5"},{"size":4435,"mtime":1610176742381,"results":"6","hashOfConfig":"5"},{"size":219,"mtime":1610130420071,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qx5b7",{"filePath":"10","messages":"11","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\andre\\OneDrive\\Documents\\_____TheCannabisCook\\projects\\potency-calculator\\src\\App.js",[],"C:\\Users\\andre\\OneDrive\\Documents\\_____TheCannabisCook\\projects\\potency-calculator\\src\\Components\\Calculator.js",["15","16"],"import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport imageBG from '../img/bg.png';\r\nimport arrow from '../img/arrow.png';\r\nimport './Calculator.scss';\r\nimport { Button, Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Form = styled.div`\r\n    background-image: URL(${imageBG});\r\n    background-repeat: no-repeat;\r\n    background-position: 50% 40%;\r\n    background-size: 200px;\r\n    \r\n`;\r\n\r\nconst Box = styled.div`\r\n      padding: 10px;       \r\n`;\r\n\r\nconst Calculator = () => {\r\n    const [totalThc, setMg] = useState();\r\n    const [amountOfCanna, setGrC] = useState();\r\n    const [producedButter, setGrB] = useState();\r\n    const [result, setResult] = useState();\r\n\r\n    const handleThcChange = (event) => setMg(event.target.value);\r\n    const handleCannaChange = (event) => setGrC(event.target.value);\r\n    const handleButterChange = (event) => setGrB(event.target.value);\r\n\r\n    const computeResult = () => {\r\n        let resultValue = ((totalThc * amountOfCanna)/producedButter).toFixed(2);\r\n        setResult(resultValue);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div>\r\n                <div className='text-center'>\r\n                    <h3 className='text-danger'>CannaButter Potency Calculator</h3>\r\n                </div>\r\n            </div>\r\n            <Container className='d-flex justify-content-center' id='calc'>\r\n                <Row>\r\n                    <Col className='text-center pr-3'>\r\n                        <Form>\r\n                            <Box>\r\n                                <label id='label'>TOTAL THC/mg</label><br/>\r\n                                    <input \r\n                                    type='number' \r\n                                    placeholder='0.00mg'\r\n                                    onChange={handleThcChange}\r\n                                    value={totalThc} />\r\n                            </Box>\r\n                            <Box>\r\n                                <label id='label'>Amount of Cannabis/g</label><br/>\r\n                                    <input \r\n                                    type='number' \r\n                                    placeholder='0.00g'\r\n                                    onChange={handleCannaChange}\r\n                                    value={amountOfCanna} />\r\n                            </Box>\r\n                            <Box>\r\n                                <label id='label'>Produced Butter/g</label><br/>\r\n                                    <input \r\n                                    type='number'\r\n                                    placeholder='0.00g'\r\n                                    onChange={handleButterChange} \r\n                                    value={producedButter} />\r\n                            </Box>\r\n                        </Form>\r\n                        <div className='mt-2'>\r\n                            <Button onClick={computeResult}>Submit</Button>\r\n                        </div>\r\n                    </Col>\r\n                    <Col>\r\n                        <div className='text-nowrap text-md-left pl-3' id='result'>\r\n                            <Row>\r\n                                {\r\n                                    result?\r\n                                    <><p><b>The OPTIMAL POTENCY:</b> <br/><b>{result}mg</b> per gram of butter!</p></>\r\n                                    :\r\n                                    <><p><b>The OPTIMAL POTENCY:</b> <br/><b>0.00mg</b> per gram of butter!</p></>\r\n                                }\r\n                            </Row>\r\n                            <Row id='arrow'>\r\n                                <img src={arrow} />\r\n                            </Row>\r\n                            <Row>\r\n                                <p><b>Remove 10% for accuracy</b></p>\r\n                            </Row>\r\n                            <Row id='arrow'>\r\n                                <img src={arrow} />\r\n                            </Row>\r\n                            <Row>\r\n                                <p>Final Approximation is <br/><b>{result?(result * 0.90).toFixed(2):(0.00).toFixed(2)}mg</b> per gram of butter.</p>\r\n                            </Row>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                \r\n                \r\n                \r\n            </Container>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Calculator;","C:\\Users\\andre\\OneDrive\\Documents\\_____TheCannabisCook\\projects\\potency-calculator\\src\\index.js",[],{"ruleId":"17","severity":1,"message":"18","line":86,"column":33,"nodeType":"19","endLine":86,"endColumn":52},{"ruleId":"17","severity":1,"message":"18","line":92,"column":33,"nodeType":"19","endLine":92,"endColumn":52},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]